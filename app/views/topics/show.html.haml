.topic
  .row
    .span8.offset2
      - @contents.each do |content|
        %h1.beta.topic-title
          = @topic.title
        %section.topic
          .row
            .audio
              =audio_tag content.topic_content, autoplay: false, controls: true, "aria-hidden" => "true"
        %br
        .row
          .tabbable.tabs-left.topic-details.colored-block{:id => "tabpanel", :role => "application"}
            %ul.nav.nav-tabs{:role => "tablist"}
              %li.tab{:id => "s_tab", :role => "tab", "aria-owns" => "s_#{content.id.to_s}",
                              "aria-controls" => "s_#{content.id.to_s}"}
                %a{"data-toggle" => "tab", :href => "#s_#{content.id.to_s}"} Summary
              %li.tab.active{:id => "t_tab", :role => "tab", "aria-owns" => "t_#{content.id.to_s}",
                              "aria-selected" => "true", "aria-controls" => "t_#{content.id.to_s}"}
                %a{"data-toggle" => "tab", :href => "#t_#{content.id.to_s}"} Transcript
              %li.tab{:id => "test_tab", :role => "tab", "aria-owns" => "test_#{content.id.to_s}", "aria-controls" => "test_#{content.id.to_s}"}
                %a{"data-toggle" => "tab", :href => "#test_#{content.id.to_s}"} Take test
            .tab-content
              .tab-pane.summary{ :id => "s_#{content.id.to_s}", :role => "tabpanel", "aria-labelledby" => "s_tab"}
                %h3{"tabindex" => "0"} Summary
                = raw markdown content.content_body
              .tab-pane.transcript.active{:id => "t_#{content.id.to_s}", :role => "tabpanel", "aria-labelledby" => "t_tab"}
                %h3{"tabindex" => "0"} Transcript 
                = raw content.transcript
              .tab-pane.test{:id =>"test_#{content.id.to_s}", :role => "tabpanel", "aria-labelledby" => "t_tab"}
                %h3{"tabindex" => "0"} Take test
                - if user_signed_in?
                  %p 
                  - content.questions.each_index do |index|
                    - question = content.questions[index]
                    .span5.question{:id => "q_#{question.id}"}
                      %b 
                        =raw markdown question.query
                      - attempt = Attempt.where(:question => question, :user => current_user).first if current_user.attempts.count > 0
                      = simple_form_for question, :url => attempt_question_path(question), remote: true do |f|
                        .control-group
                          .controls
                            %br
                            %br
                            - if attempt == nil or attempt.solved == false
                              = f.collection_radio_buttons :options, question.options.collect{|opt| [opt.id, opt.label]}, :first, :last
                              = f.submit 'Submit', :class => 'btn'
                              %p{:id => "answer_#{question.id}"}
                            - else
                              - question.options.each do |option|
                                = f.label option.label
                - else
                  %p
                    %b To take test please #{link_to "sign in", new_user_session_path} or #{link_to "sign up", new_user_registration_path} 

      %br             
      .pull-right= link_to "BACK", level_path(@level), :class => "btn"
  = render_shareable :url => request.url
