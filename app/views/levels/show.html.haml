.level
  .row
    .span6
      .row-fluid
        .counter{class: "counter-7"}
        %h1.gamma.level-header #{@level.level_name}
  .row
    .span3.level-scoring
      .score-wrapper
        %ul.unstyled.score.large
          - @level_coins.times do |count|
            %li.score-indicator{ :class => "#{'complete' if count < @topics.collect{|topic| won_topic_coins(topic)}.inject(:+)}"}
        %span.delta #{@level_coins} of #{@topics.collect{|topic| won_topic_coins(topic)}.inject(:+)} coins to win
    .span9
      - @topics.each do |topic|
        .row-fluid.level-topic-wrapper.colored-block
          .span9
            .row-fluid.level-topic
              .span3
                .score-wrapper
                  %ul.unstyled.score
                    - topic_coins = topic.questions.collect { |question| H_COOKIES[question.question_type] }.inject(:+).to_i
                    - topic_coins.times do |count|
                      %li.score-indicator{ :class => "#{'complete' if count < won_topic_coins(topic)}"}

              .span9.topic-details
                %h2.delta= topic.title
                %p.topic-description= topic.description  
                %a.btn.btn-start-topic= link_to " Start topic", level_topic_path(@level, topic)
        .span3
          - @topics.each do |newtopic|
            - if newtopic.questions.count == Attempt.where(:user => current_user, :topic => newtopic,
                                                                :solved => true).collect(&:solved).size           	      
              .topic-score.right
                - @count = @count + newtopic.questions.collect { |question| H_COOKIES[question.question_type] }.inject(:+).to_i 
            - else
              .topic-score.wrong
             
      - if @level_cookies == @count
        %button{:class => "btn-bonus-round unlocked",:href => "#", :onclick => "document.getElementById('bonus_round').style.display = 'block';"} Bonus Round Unlocked
      - else
        %button{:disabled => "true", :class => "btn-bonus-round"} Bonus Round Locked
      #bonus_round{:style => "display: none"}
        BONUS ROUND QUESTIONS
        - @bonus.questions.each do |question|
        - attempt = Attempt.where(:question => question, :user => current_user).first if current_user.attempts.count     > 0
          - flag = false
          - if attempt != nil
            - flag = true if attempt.solved == true
          - if flag == false
            .span.question{:id => "q_#{question.id}"}
              QUESTION:
              = question.query
              %br
              %br
              = simple_form_for question, :url => attempt_question_path(question), remote: true do |f|
                .control-group
                  .controls
                    OPTIONS:
                    %br
                    = f.collection_radio_buttons :options, question.options.collect{|opt| [opt.id, opt.label]}, :first,     :last
                    = f.submit 'Submit', :class => 'btn'
          %p{:id => "answer_#{question.id}"}
  = render_shareable :url => request.url
